// json 
{
	"requires": [ "opxi2node/message" ],
	"daemon": {
		"test": {
			"initiator": [ "couch_changes", "redis_event", "worker" ]
		},
        "all": {
			"initiator": [ "couch_changes", "redis_event", "worker" ]
		},
        "worker": {
            "initiator": [ "worker" ]
        },
        "worker2": {
            "initiator": [ "worker" ]
        },
        "core": {
            "initiator": [ "redis_event" ]
        }
	},
	"initiator":{
        "worker": {
            "workflows": [{
                "name": "outbound-msg",
                "concurrency": 60,
                "$backdata": "log",
                "tasks": "<message/outbound.json>"
            },{
                "name": "outbound-notify-first",
                "concurrency": 50,
                "$backdata": "log",
                "$failcheck": "log.answered",
                "tasks": "<message/outbound-notify-first.json>"
            },{
                "name": "campaign-run",
                "concurrency": 5,
                "$backdata": "cmp_jobs",
                "tasks": "<campaign/run.json>"
            },{
                "name": "authorize-msg",
                "concurrency": 200,
                "$backdata": "auth",
                "tasks": "<message/authorize.json>"
            },{
                "name": "email-send-notify",
                "concurrency": 100,
                "tasks": "<message/send-notify.json>"
            },{
                "name": "sms-send-notify",
                "concurrency": 100,
                "tasks": "<message/send-notify.json>"
            },{
                "name": "sms-delivery-notify",
                "concurrency": 100,
                "tasks": "<message/delivery-notify.json>"
            },{
                "name": "voice-send-notify",
                "concurrency": 100,
                "tasks": "<message/send-notify.json>"
            },{
                "name": "voice-delivery-notify",
                "concurrency": 100,
                "tasks": "<message/delivery-notify.json>"
            },{
                "name": "atm_device_event",
                "concurrency": 100,
                "$backdata": "failure_result",
                "tasks": "<atm/process.json>"
            },{
                "name": "atm_failure_notify",
                "concurrency": 50,
                "$backdata": "alarm",
                "tasks": "<atm/notify.json>"
            },{
                "name": "atm_failure_alarm",
                "concurrency": 50,
                "$backdata": "alarm_answered",
                "tasks": "<atm/alarm.json>"
            },{
                "name": "atm_supervisor_notify",
                "concurrency": 50,
                "tasks": "<atm/supervisory.json>"
            },{
                "name": "atm_event_notify",
                "concurrency": 300,
                "tasks": "<atm/start_notification_process.json>"
            },{
                "name": "atm_failure_pre_notify",
                "concurrency": 100,
                "tasks": "<atm/pre_notify.json>"
            },{
                "name": "atm_failure_post_notify",
                "concurrency": 100,
                "tasks": "<atm/post_notify.json>"
            }



            ,{
                "name": "test_job",
                "concurrency": 1,
                "$backdata": "tt",
                "tasks": [{
                    "$function": "JSON.parse",
                    "$args": "{\"finished\": true }",
                    "$set": "testresult"
                },{
                    "$function": "console.print",
					"$args": [ "New message: ", "{$job.current_attempt}" ]
                }]
            }


            ]
        },


		"redis_event": {
			"workflows": [{
				"pattern": "opxi2.outbound.*",
				"tasks": "<campaign/msglog.json>"
			},{
                "pattern": "opxi2.outbound.email.send.*",
                "tasks": "<campaign/sentlog.json>"
			},{
                "pattern": "opxi2.outbound.voice.send.*",
                "tasks": "<campaign/sentlog.json>"
			},{
                "pattern": "opxi2.outbound.sms.send.*",
                "tasks": "<campaign/sentlog.json>"
			},{
                "pattern": "opxi2.outbound.*.delivery.*.delivered",
                "tasks": "<campaign/successlog.json>"
			},{
				"pattern": "opxi2.campaign.start.*",
				"tasks": "<campaign/process.json>"
			},{
				"pattern": "cancel.opxi2.campaign.start.*",
				"tasks": "<campaign/cancel.json>"
			},{
				"pattern": "cancel.opxi2.atm.alarm.*",
				"tasks": "<atm/cancel.json>"
			},{
                "pattern": "opxi2.outbound.*.send.*",
                "tasks": "<atm/alarm_send_log.json>"
			},{
                "pattern": "opxi2.outbound.*.delivery.*",
                "tasks": "<atm/alarm_send_log.json>"
			},{
                "pattern": "opxi2.crm.event.alarmtime",
                "tasks": "<atm/start_failure_event.json>"
			}



            ,{
				"pattern": "opxi2.df1.*.alo",
				"tasks": [
                    {
                        "$class": "atm_event",
                        "id": "{$message}",
                        "$set": "failure"
                    },
                    {
                        "$class": "atm_event",
                        "$method": "before_notification_delay",
                        "failure": "{$failure}",
                        "$set": "postpone"
                    },
                    {
                        "$function": "console.print",
                        "$args": ["message ", "{$postpone}"]
                    }
            ]}

            ,{
				"pattern": "opxi2.test2.*",
				"tasks": "<tests/every_scope.json>"
            }

            ]
		},


        "couch_changes": {
            "workflows":[{
                "filter": "query/atm_event",
                "tasks": "<atm/job_from_couchdb.json>"
            },{
                "filter": "query/important2",
                "tasks": "<tests/simple_test.json>"
            },{
                "filter": "query/important",
                "tasks": "<tests/every_break.json>"
            }]
        }


	}
}